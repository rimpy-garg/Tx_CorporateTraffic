// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TxAutomateFramework.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ContactsModule")]
    public partial class ContactsModuleFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ContactsModule.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ContactsModule", "This module covers functionality of contacts module", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Contacts_TC003_AddContacts_LandLord")]
        [NUnit.Framework.CategoryAttribute("TC003_AddContacts_LandLord")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "Mark", "Zubair", "General Manager", "AA Corporation", "1 Main Street", "Woodbridge", "New Jersy", "07095", "United States", "732-111-111", "mzubair@aa.com", "Land Lord", "1211", "35-2521520", "400", "665120", "101", "Check", "2513652", new string[] {
                "Source:TC003_AddContacts_LandLord.xlsx"}, Category="Source:TC003_AddContacts_LandLord.xlsx")]
        public virtual void Contacts_TC003_AddContacts_LandLord(
                    string lID, 
                    string password, 
                    string firstName, 
                    string lastName, 
                    string jobTitle, 
                    string companyName, 
                    string street, 
                    string town, 
                    string state, 
                    string pin, 
                    string country, 
                    string phone, 
                    string emailAddress, 
                    string payeeType, 
                    string vendorNumber, 
                    string fedID, 
                    string taxID, 
                    string corporationNumber, 
                    string payeeSite, 
                    string paymentMethod, 
                    string bankCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC003_AddContacts_LandLord"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Contacts_TC003_AddContacts_LandLord", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then("Enter record id in Search box and select the lease", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
 testRunner.Then("Select contacts tab and click on Edit for land lord section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.And("Verify the message No contacts specified in contacts section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.Then(string.Format("User Enters valid data {0} and {1} and {2} and {3} and {4} and {5} and {6} and {7" +
                        "} and {8} and {9} and {10} and {11} and {12} and {13} and {14} and {15} and {16}" +
                        " and {17} and {18}", firstName, lastName, jobTitle, companyName, street, town, state, pin, country, phone, emailAddress, payeeType, vendorNumber, fedID, taxID, corporationNumber, payeeSite, paymentMethod, bankCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("Select save contacts and verify the message Contact saved successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Contacts_TC004_AddContacts_Tenant")]
        [NUnit.Framework.CategoryAttribute("TC004_AddContacts_Tenant")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "AA Corporation", "1 Main Street", "Woodbridge", "New Jersy", "07095", "United States", "732-111-111", "mzubair@aa.com", "testpayee1", "1211", "35-2521520", "400", "665120", "101", "Check", "2513652", new string[] {
                "Source:TC004_AddContacts_Tenant.xlsx"}, Category="Source:TC004_AddContacts_Tenant.xlsx")]
        public virtual void Contacts_TC004_AddContacts_Tenant(
                    string lID, 
                    string password, 
                    string companyName, 
                    string street, 
                    string town, 
                    string state, 
                    string pin, 
                    string country, 
                    string phone, 
                    string emailAddress, 
                    string payeeType, 
                    string vendorNumber, 
                    string fedID, 
                    string taxID, 
                    string corporationNumber, 
                    string payeeSite, 
                    string paymentMethod, 
                    string bankCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC004_AddContacts_Tenant"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Contacts_TC004_AddContacts_Tenant", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.Then("Enter record id in Search box and select the lease", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.Then("Select contacts tab and click on Edit for Tenant section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.And("Verify the message No contacts specified in contacts section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.Then(string.Format("User Eners valid data for Tenant{0} and {1} and {2} and {3} and {4} and {5} and {" +
                        "6} and {7} and {8} and {9} and {10} and {11} and {12} and {13} and {14} and {15}" +
                        "", companyName, street, town, state, pin, country, phone, emailAddress, payeeType, vendorNumber, fedID, taxID, corporationNumber, payeeSite, paymentMethod, bankCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.Then("Select save contacts and verify the message Contact saved successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Contacts_TC005_AddContacts_Payor")]
        [NUnit.Framework.CategoryAttribute("TC005_AddContacts_Payor")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "NJNM", "P.O. Box 221409", "Fords", "New Jersy", "07095", "United States", "888-251-5288", "info@njnm.com", "Utility Provider", "1000251", "88-2521251", "", "", "", "Check", " 03521521", new string[] {
                "Source:TC005_AddContacts_Payor.xlsx"}, Category="Source:TC005_AddContacts_Payor.xlsx")]
        public virtual void Contacts_TC005_AddContacts_Payor(
                    string lID, 
                    string password, 
                    string companyName, 
                    string street, 
                    string town, 
                    string state, 
                    string pin, 
                    string country, 
                    string phone, 
                    string emailAddress, 
                    string payeeType, 
                    string vendorNumber, 
                    string fedID, 
                    string taxID, 
                    string corporationNumber, 
                    string payeeSite, 
                    string paymentMethod, 
                    string bankCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC005_AddContacts_Payor"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Contacts_TC005_AddContacts_Payor", @__tags);
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.Then("Enter record id in Search box and select the lease", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 36
 testRunner.Then("Select Contacts tab and click on Edit for Payor section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.And("Verify the message No contacts specified in contacts section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.Then(string.Format("User Enters valid data for Payor {0} and {1} and {2} and {3} and {4} and {5} and " +
                        "{6} and {7} and {8} and {9} and {10} and {11} and {12} and {13} and {14} and {15" +
                        "}", companyName, street, town, state, pin, country, phone, emailAddress, payeeType, vendorNumber, fedID, taxID, corporationNumber, payeeSite, paymentMethod, bankCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.Then("Select save contacts and verify the message Contact saved successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Contacts_TC006_Contacts_CopyToPayee")]
        [NUnit.Framework.CategoryAttribute("TC006_Contacts_CopyToPayee")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "Property", "Retail", "5237 - APM", "Office", "100 Woodbridge Center Drive", "Woodbridge", "NJ", "07095", "United States", "Org Level 2", "Americas", "Ground", "Leased", "Gross", "2500", "SY", "Acre", "Roger", "Date", "General Manager", "AA Corporation", "1 Main Street", "Woodbridge", "New Jersy", "07095", "United States", "732-111-1111", "abc@aa.com", "Landlord", "1211", "35-2521520", "22511361", "665120", "101", "Check", "02513652", new string[] {
                "Source:TC006_Contacts_CopyToPayee.xlsx"}, Category="Source:TC006_Contacts_CopyToPayee.xlsx")]
        public virtual void Contacts_TC006_Contacts_CopyToPayee(
                    string lID, 
                    string password, 
                    string strRcrdType, 
                    string strClassification, 
                    string strBrand, 
                    string strPropType, 
                    string strStreetName, 
                    string strTown, 
                    string strState, 
                    string strPIN, 
                    string strCountry, 
                    string strOrganization, 
                    string strRegion, 
                    string strGrpName, 
                    string strOwnerType, 
                    string strRentType, 
                    string strArea, 
                    string strMesrmtArea, 
                    string strLandUnit, 
                    string firstName, 
                    string lastName, 
                    string jobTitle, 
                    string companyName, 
                    string street, 
                    string town, 
                    string state, 
                    string pin, 
                    string country, 
                    string phone, 
                    string emailAddress, 
                    string payeeType, 
                    string vendorNumber, 
                    string fedID, 
                    string taxID, 
                    string corporationNumber, 
                    string payeeSite, 
                    string paymentMethod, 
                    string bankCode, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC006_Contacts_CopyToPayee"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Contacts_TC006_Contacts_CopyToPayee", @__tags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.Then("Enter record id in Search box and select the lease", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
 testRunner.Then("Select Contacts tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.Then("Click on Copy to Payee link in Landlord section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 62
 testRunner.Then("Click on Financials tab and verify the Payee details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
 testRunner.And("Click on Contacts tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.Then("Click on Copy to Payee link and verify the error message", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
