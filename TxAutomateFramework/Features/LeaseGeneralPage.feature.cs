// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TxAutomateFramework.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("LeaseGeneralModule")]
    public partial class LeaseGeneralModuleFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "LeaseGeneralPage.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "LeaseGeneralModule", "This module covers all the functionality related to new lease creation", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LeaseGeneral_TC001_Create_Lease")]
        [NUnit.Framework.CategoryAttribute("TC001_Create_Lease")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "Property", "Retail", "5237 - APM", "Office", "100 Woodbridge Center Drive", "Woodbridge", "NJ", "07095", "United States", "Org Level 2", "Americas", "Ground", "Leased", "Gross", "2500", "SY", "Acre", new string[] {
                "Source:TC001_Create_Lease.xlsx"}, Category="Source:TC001_Create_Lease.xlsx")]
        public virtual void LeaseGeneral_TC001_Create_Lease(
                    string lID, 
                    string password, 
                    string strRcrdType, 
                    string strClassification, 
                    string strBrand, 
                    string strPropType, 
                    string strStreetName, 
                    string strTown, 
                    string strState, 
                    string strPIN, 
                    string strCountry, 
                    string strOrganization, 
                    string strRegion, 
                    string strGrpName, 
                    string strOwnerType, 
                    string strRentType, 
                    string strArea, 
                    string strMesrmtArea, 
                    string strLandUnit, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC001_Create_Lease"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LeaseGeneral_TC001_Create_Lease", @__tags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.And("I Navigate to Lease -> New page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 8
 testRunner.Then(string.Format("I entered all the mandatory information for creating new lease form {0} and {1} a" +
                        "nd {2} and {3} and {4} and {5} and {6} and {7} and {8} and {9} and {10} and {11}" +
                        " and {12} and {13} and {14} and {15} and {16}", strRcrdType, strClassification, strBrand, strPropType, strStreetName, strTown, strState, strPIN, strCountry, strOrganization, strRegion, strGrpName, strOwnerType, strRentType, strArea, strMesrmtArea, strLandUnit), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
 testRunner.When("I press Save and Create Lease button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("The default page of lease should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 11
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("LeaseGeneral_TC002_EditLease_General_Data")]
        [NUnit.Framework.CategoryAttribute("TC002_EditLease_General_Data")]
        [NUnit.Framework.TestCaseAttribute("sbusireddy_admin", "Welcome*2018", "Property", "Retail", "5237 - APM", "Org Level 2", "Americas", "Ground", "Leased", "Gross", "KISLAK", "1996", "Middlesex", "200", "2nd", "2100", "2", "400", new string[] {
                "Source:TC002_EditLease_General_Data.xlsx"}, Category="Source:TC002_EditLease_General_Data.xlsx")]
        public virtual void LeaseGeneral_TC002_EditLease_General_Data(
                    string lID, 
                    string password, 
                    string strRcrdType, 
                    string strClassification, 
                    string strBrand, 
                    string strOrganization, 
                    string strRegion, 
                    string strGrpName, 
                    string strOwnerType, 
                    string strRentType, 
                    string strBuildName, 
                    string strYear, 
                    string strCounty, 
                    string strSuite, 
                    string strFloor, 
                    string strUsable, 
                    string strLand, 
                    string strAreaCust, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC002_EditLease_General_Data"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("LeaseGeneral_TC002_EditLease_General_Data", @__tags);
#line 19
this.ScenarioSetup(scenarioInfo);
#line 20
 testRunner.Given(string.Format("Login to application {0} and {1}", lID, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 21
 testRunner.Then("Enter record id in Search box and click on EditAll link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.Then(string.Format("Verify all data in the form  {0} and {1} and {2} and {3} and {4} and {5} and {6} " +
                        "and {7}", strRcrdType, strClassification, strBrand, strOrganization, strRegion, strGrpName, strOwnerType, strRentType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.And(string.Format("User updates Location section {0} and {1} and {2} and {3} and {4}", strBuildName, strYear, strCounty, strSuite, strFloor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("User updates Date section", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And(string.Format("User Updates Area section {0}, {1}, {2}", strUsable, strLand, strAreaCust), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.Then("Click Save and Return button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.Then("I do logout from application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
